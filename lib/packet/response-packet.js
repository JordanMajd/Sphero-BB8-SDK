'use strict';

var Packet = require('./packet');

function ResponsePacket(){
  //start of packet 1, always 0xFFH
  this.sop1 = 0xFF;
  //start of packet 2, 0xF8 to 0xFFH encoding 4 bits of per-message options
  //bits 1111 1 1 resetTimeout, answer
  //when answer 1, act and reply, when 0 act and don't reply
  //when resetTimeout 1 reset client inactivity timeout, when 0 do not reset
  this.sop2 = 0xFC | (timeout && 0x02) | (answer && 0x01);
  //message response, generated by message decoder of virtual device
  this.msrp;
  //sequence number, echoed to client when this is direct message response
  this.seq;
  //data length, the number of bytes following through the end of the packet
  this.dlen;
  //data, optional data to accompany the command or based on "streaming" data settings
  this.data;
  //checksum
  this.chck;
  Packet.call(this);
}
ResponsePacket.prototype = Object.create(Packet.prototype);

module.exports = ResponsePacket;
